"""
Задача 7.
Небалансиран шифър на Файстел

"""


# Таблиците от условието

f1 = {
    '0000':'00','0001':'10','0010':'11','0011':'11',
    '0100':'01','0101':'01','0110':'01','0111':'10',
    '1000':'10','1001':'01','1010':'10','1011':'11',
    '1100':'00','1101': '00','1110':'00','1111':'00'
}

f2 = {
    '0000':'10','0001':'11','0010':'00','0011':'11',
    '0100':'10','0101':'11','0110':'01','0111':'01',
    '1000':'01','1001':'11','1010':'10','1011':'00',
    '1100':'10','1101':'11','1110':'01','1111':'00'
}
f3 = {
    '0000':'10','0001':'00','0010':'00','0011':'01',
    '0100':'10','0101': '10','0110':'10','0111':'11',
    '1000':'01','1001':'11','1010':'00','1011':'10',
    '1100':'11','1101':'10','1110':'11','1111':'01'
}

f4 = {
    '0000':'11','0001':'10','0010':'01','0011':'10',
    '0100':'00','0101':'10','0110':'00','0111':'00',
    '1000':'10','1001':'01','1010':'00','1011':'10',
    '1100':'01','1101':'11','1110':'10','1111':'11'
}
round_funcs = [f1, f2, f3, f4]

def feistel_unbalanced(block, m, n, funcs):
    A = block[:m]
    B = block[m:]
    print(f"Round 0: A={A}, B={B} ({A}{B})")
    for i, f in enumerate(funcs, 1):
        A = block[:m]
        B = block[m:]
        B_pad = B.rjust(n, '0')
        Fi = f[B_pad]
        A_portion = A[:m]
        B_next = ''.join('1' if a!=b else '0'
                         for a,b in zip(A_portion, Fi))
        A, B = B_pad, B_next
        block = A + B
        print(f"Round {i}: f{i}({B_pad})={Fi}; -> next A={A}, next B={B} ({A}{B})")
    C =  A + B
    return C

if __name__ == "__main__":
    plaintext = "101101"
    m, n = 2, 4
    cipher = feistel_unbalanced(plaintext, m, n, round_funcs)
    print(f"\nCiphertext: {cipher}")